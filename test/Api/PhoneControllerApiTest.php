<?php
/**
 * PhoneControllerApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  MailSlurp
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * MailSlurp API
 *
 * MailSlurp is an API for sending and receiving emails and SMS from dynamically allocated email addresses and phone numbers. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.2.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace MailSlurp\Test\Api;

use \MailSlurp\Configuration;
use \MailSlurp\ApiException;
use \MailSlurp\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * PhoneControllerApiTest Class Doc Comment
 *
 * @category Class
 * @package  MailSlurp
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class PhoneControllerApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for createEmergencyAddress
     *
     * Create an emergency address.
     *
     */
    public function testCreateEmergencyAddress()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteEmergencyAddress
     *
     * Delete an emergency address.
     *
     */
    public function testDeleteEmergencyAddress()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deletePhoneNumber
     *
     * Delete a phone number.
     *
     */
    public function testDeletePhoneNumber()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getConsentStatus
     *
     * Get consent status.
     *
     */
    public function testGetConsentStatus()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getEmergencyAddress
     *
     * Get an emergency address.
     *
     */
    public function testGetEmergencyAddress()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getEmergencyAddresses
     *
     * Get emergency addresses.
     *
     */
    public function testGetEmergencyAddresses()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getPhoneNumber
     *
     * Get a phone number by ID.
     *
     */
    public function testGetPhoneNumber()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getPhoneNumbers
     *
     * Get phone numbers.
     *
     */
    public function testGetPhoneNumbers()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getPhonePlans
     *
     * Get phone plans.
     *
     */
    public function testGetPhonePlans()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getPhonePlansAvailability
     *
     * Get phone plans availability.
     *
     */
    public function testGetPhonePlansAvailability()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getSentSmsByPhoneNumber
     *
     * List sent TXT messages for a phone number.
     *
     */
    public function testGetSentSmsByPhoneNumber()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getSmsByPhoneNumber
     *
     * List SMS messages for a phone number.
     *
     */
    public function testGetSmsByPhoneNumber()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sendSmsFromPhoneNumber
     *
     * Send TXT message from a phone number.
     *
     */
    public function testSendSmsFromPhoneNumber()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for setConsentStatus
     *
     * Set consent status.
     *
     */
    public function testSetConsentStatus()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for setPhoneFavourited
     *
     * Set phone favourited state.
     *
     */
    public function testSetPhoneFavourited()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for testPhoneNumberSendSms
     *
     * Test sending an SMS to a number.
     *
     */
    public function testTestPhoneNumberSendSms()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updatePhoneNumber
     *
     * Update a phone number.
     *
     */
    public function testUpdatePhoneNumber()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for validatePhoneNumber
     *
     * Verify validity of a phone number.
     *
     */
    public function testValidatePhoneNumber()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
