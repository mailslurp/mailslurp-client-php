<?php
/**
 * InboxForwarderControllerApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  MailSlurp
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * MailSlurp API
 *
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.2.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace MailSlurp\Test\Api;

use \MailSlurp\Configuration;
use \MailSlurp\ApiException;
use \MailSlurp\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * InboxForwarderControllerApiTest Class Doc Comment
 *
 * @category Class
 * @package  MailSlurp
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class InboxForwarderControllerApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for createNewInboxForwarder
     *
     * Create an inbox forwarder.
     *
     */
    public function testCreateNewInboxForwarder()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteInboxForwarder
     *
     * Delete an inbox forwarder.
     *
     */
    public function testDeleteInboxForwarder()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteInboxForwarders
     *
     * Delete inbox forwarders.
     *
     */
    public function testDeleteInboxForwarders()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getAllInboxForwarderEvents
     *
     * Get all inbox forwarder events.
     *
     */
    public function testGetAllInboxForwarderEvents()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getForwarderEvent
     *
     * Get a forwarder event.
     *
     */
    public function testGetForwarderEvent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getInboxForwarder
     *
     * Get an inbox forwarder.
     *
     */
    public function testGetInboxForwarder()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getInboxForwarderEvent
     *
     * Get an inbox forwarder event.
     *
     */
    public function testGetInboxForwarderEvent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getInboxForwarderEvents
     *
     * Get an inbox forwarder event list.
     *
     */
    public function testGetInboxForwarderEvents()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getInboxForwarders
     *
     * List inbox forwarders.
     *
     */
    public function testGetInboxForwarders()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for testInboxForwarder
     *
     * Test an inbox forwarder.
     *
     */
    public function testTestInboxForwarder()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for testInboxForwardersForInbox
     *
     * Test inbox forwarders for inbox.
     *
     */
    public function testTestInboxForwardersForInbox()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for testNewInboxForwarder
     *
     * Test new inbox forwarder.
     *
     */
    public function testTestNewInboxForwarder()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateInboxForwarder
     *
     * Update an inbox forwarder.
     *
     */
    public function testUpdateInboxForwarder()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
